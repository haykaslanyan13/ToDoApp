{"version":3,"sources":["Redux/TodoSlice.js","components/ToDoHeader.js","components/Filters.js","components/ToDoList.js","components/Main.js","App.js","reportWebVitals.js","Redux/store.js","index.js"],"names":["toDoSlice","createSlice","name","initialState","toDoItems","toDoName","filter","reducers","inputValueChange","state","action","payload","addToDo","text","push","setFilter","checkedOrUnchecked","selectedElem","find","el","id","done","deleteElement","selectedElemIndex","findIndex","splice","clearComplated","newtoDoItems","elem","actions","ToDoHeader","useSelector","toDo","dispatch","useDispatch","onAddButtonClick","uuidv4","style","margin","textAlign","marginBottom","fontSize","TextField","value","onChange","e","target","onInputValueChange","label","variant","width","onKeyDown","event","keyCode","Button","height","onClick","Filters","filterTodoItems","doneTodoItems","item","Error","onButtonClick","currentFilter","border","padding","marginRight","length","marginLeft","backgroundColor","ToDoList","borderWidth","display","justifyContent","List","sx","maxWidth","bgcolor","map","ListItemButton","Checkbox","checked","edge","ListItemText","primary","Main","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","toDoReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8e47c0c.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\n\nconst initialState = {\n  toDoItems: [],\n  toDoName: \"\",\n  filter: \"All\",\n}\n\nexport const toDoSlice = createSlice({\n  name: \"toDo\",\n  initialState,\n  reducers: {\n    inputValueChange: (state, action) => {\n      state.toDoName = action.payload\n    },\n    addToDo: (state, action) => {\n      if (action.payload.text) {\n        state.toDoItems.push(action.payload)\n      }\n    },\n    setFilter: (state, action) => {\n      state.filter = action.payload\n    },\n    checkedOrUnchecked: (state, action) => {\n      const selectedElem = state.toDoItems.find((el) => el.id === action.payload)\n      selectedElem.done = !selectedElem.done\n    },\n    deleteElement: (state, action) => {\n      const selectedElemIndex = state.toDoItems.findIndex(\n        (el) => el.id === action.payload\n      )\n      state.toDoItems.splice(selectedElemIndex, 1)\n    },\n    clearComplated: (state) => {\n      const newtoDoItems = state.toDoItems.filter((elem) => !elem.done)\n      state.toDoItems = newtoDoItems\n    },\n  },\n})\n\nexport const {\n  inputValueChange,\n  addToDo,\n  setFilter,\n  checkedOrUnchecked,\n  deleteElement,\n  clearComplated,\n} = toDoSlice.actions\nexport default toDoSlice.reducer\n","import { Button, TextField } from \"@mui/material\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { addToDo, inputValueChange } from \"../Redux/TodoSlice\"\nimport { v4 as uuidv4 } from \"uuid\"\nfunction ToDoHeader() {\n  const toDoName = useSelector((state) => state.toDo.toDoName)\n  const dispatch = useDispatch()\n  const onInputValueChange = (e) => {\n    dispatch(inputValueChange(e.target.value))\n  }\n  const onAddButtonClick = () => {\n    dispatch(\n      addToDo({\n        text: toDoName,\n        id: uuidv4(),\n        done: false,\n      })\n    )\n    dispatch(inputValueChange(\"\"))\n  }\n  return (\n    <div\n      style={{\n        margin: 10,\n        textAlign: \"center\",\n      }}\n    >\n      <div style={{ margin: 50, marginBottom: 20, fontSize: 30 }}>My To Do List</div>\n      <TextField\n        value={toDoName}\n        onChange={(e) => onInputValueChange(e)}\n        id=\"outlined-basic\"\n        label=\"Title...\"\n        variant=\"outlined\"\n        style={{\n          width: 450,\n        }}\n        onKeyDown={(event) => {\n          if (event.keyCode === 13) {\n            onAddButtonClick()\n          }\n        }}\n      />\n      <Button\n        style={{\n          height: 56,\n          width: 100,\n        }}\n        variant=\"outlined\"\n        onClick={onAddButtonClick}\n      >\n        Add\n      </Button>\n    </div>\n  )\n}\n\nexport default ToDoHeader\n","import { Button } from \"@mui/material\"\nimport React from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { clearComplated, setFilter } from \"../Redux/TodoSlice\"\nfunction Filters() {\n  const filter = useSelector((state) => state.toDo.filter)\n  let filterTodoItems = useSelector((state) => state.toDo.toDoItems)\n  filterTodoItems = filterTodoItems.filter((item) => {\n    switch (filter) {\n      case \"All\":\n        return true\n      case \"Complated\":\n        return item.done\n      case \"Uncomplated\":\n        return !item.done\n      default:\n        throw new Error()\n    }\n  })\n  let doneTodoItems = filterTodoItems.filter((item) => item.done)\n\n  const dispatch = useDispatch()\n  const onButtonClick = (currentFilter) => {\n    dispatch(setFilter(currentFilter))\n  }\n  return (\n    <div style={{ width: 700, margin: 10, border: \"thin solid blue\", padding: 10 }}>\n      <span style={{ marginRight: 80 }}>\n        {doneTodoItems.length}/{filterTodoItems.length}\n      </span>\n      <Button\n        onClick={() => {\n          onButtonClick(\"All\")\n        }}\n        variant=\"outlined\"\n        style={{ marginLeft: 10, backgroundColor: filter === \"All\" ? \"red\" : \"\" }}\n      >\n        All\n      </Button>\n      <Button\n        onClick={() => {\n          onButtonClick(\"Complated\")\n        }}\n        variant=\"outlined\"\n        style={{\n          marginLeft: 10,\n          backgroundColor: filter === \"Complated\" ? \"red\" : \"\",\n        }}\n      >\n        Complated\n      </Button>\n      <Button\n        onClick={() => {\n          onButtonClick(\"Uncomplated\")\n        }}\n        variant=\"outlined\"\n        style={{\n          marginLeft: 10,\n          backgroundColor: filter === \"Uncomplated\" ? \"red\" : \"\",\n        }}\n      >\n        Uncomplated\n      </Button>\n      <Button\n        onClick={() => {\n          dispatch(clearComplated())\n        }}\n        variant=\"outlined\"\n        style={{ marginLeft: 10 }}\n      >\n        Clear Complateds\n      </Button>\n    </div>\n  )\n}\n\nexport default Filters\n","import { Checkbox, List, ListItemButton, ListItemText } from \"@mui/material\"\nimport DeleteIcon from \"@mui/icons-material/Delete\"\nimport Filters from \"./Filters\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { checkedOrUnchecked, deleteElement } from \"../Redux/TodoSlice\"\nimport { v4 as uuidv4 } from \"uuid\"\nfunction ToDoList() {\n  const toDoItems = useSelector((state) => state.toDo.toDoItems)\n  const filter = useSelector((state) => state.toDo.filter)\n  const dispatch = useDispatch()\n  const check = (id) => {\n    dispatch(checkedOrUnchecked(id))\n  }\n  const DeleteElem = (id) => {\n    dispatch(deleteElement(id))\n  }\n  return (\n    <div>\n      <div\n        style={{\n          textAlign: \"center\",\n          borderWidth: 2,\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        {toDoItems.length ? (\n          <List sx={{ width: \"100%\", maxWidth: 700, bgcolor: \"background.paper\" }}>\n            {toDoItems\n              .filter((item) => {\n                switch (filter) {\n                  case \"All\":\n                    return true\n                  case \"Complated\":\n                    return item.done\n                  case \"Uncomplated\":\n                    return !item.done\n                  default:\n                    throw new Error()\n                }\n              })\n              .map((item) => {\n                return (\n                  <ListItemButton\n                    key={uuidv4()}\n                    style={{ backgroundColor: \"#A9A9A9\", margin: 5 }}\n                  >\n                    <Checkbox\n                      checked={item.done}\n                      onChange={() => {\n                        check(item.id)\n                      }}\n                      edge=\"start\"\n                    />\n                    <ListItemText primary={`${item.text}`} />\n                    <DeleteIcon onClick={() => DeleteElem(item.id)} />\n                  </ListItemButton>\n                )\n              })}\n          </List>\n        ) : null}\n      </div>\n      <div style={{ display: \"flex\", justifyContent: \"center\", textAlign: \"end\" }}>\n        <Filters />\n      </div>\n    </div>\n  )\n}\n\nexport default ToDoList\n","import ToDoHeader from \"./ToDoHeader\"\nimport ToDoList from \"./ToDoList\"\n\nfunction Main() {\n  return (\n    <div>\n      <ToDoHeader />\n      <ToDoList />\n    </div>\n  )\n}\n\nexport default Main\n","import Main from \"./components/Main\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { configureStore } from \"@reduxjs/toolkit\"\nimport toDoReducer from \"./TodoSlice\"\nexport const store = configureStore({\n  reducer: {\n    toDo: toDoReducer,\n  },\n})\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport { Provider } from \"react-redux\"\nimport { store } from \"./Redux/store\"\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    ,\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}